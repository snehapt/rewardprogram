{"ast":null,"code":"var _jsxFileName = \"/Users/snehapatil/Downloads/Reward-Program/src/components/RewardsCalculator.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RewardCalculator = props => {\n  _s();\n  const {\n    customerId,\n    amount,\n    month\n  } = props;\n  const [transactions, setTransactions] = useState([]);\n  const [rewards, setRewards] = useState({\n    rewardsPerMonth: {},\n    rewardsTotal: {}\n  });\n  useEffect(() => {\n    fetch(\"http://localhost:3010/api/getTransactions\").then(res => res.json()).then(data => {\n      setTransactions(data.transactions);\n    });\n  }, []);\n  useEffect(() => {\n    const rewards = calculateRewards();\n    setRewards(rewards);\n  }, [transactions]);\n  const addTransaction = (customerId, amount, month) => {\n    setTransactions([...transactions, {\n      customerId,\n      amount,\n      month\n    }]);\n  };\n  const calculateRewards = () => {\n    const rewardsPerMonth = {};\n    const rewardsTotal = {};\n    const monthArr = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    transactions.forEach(transaction => {\n      const {\n        customerId,\n        amount,\n        date\n      } = transaction;\n      const month = monthArr[new Date(date).getMonth()];\n      if (!rewardsPerMonth[month]) {\n        rewardsPerMonth[month] = {};\n      }\n      if (!rewardsPerMonth[month][customerId]) {\n        rewardsPerMonth[month][customerId] = 0;\n      }\n      if (amount > 100) {\n        rewardsPerMonth[month][customerId] += 2 * (amount - 100) + 50;\n      } else if (amount > 50) {\n        rewardsPerMonth[month][customerId] += amount - 50;\n      }\n    });\n    Object.keys(rewardsPerMonth).forEach(month => {\n      const currentMonth = rewardsPerMonth[month];\n      Object.keys(currentMonth).forEach(customerId => {\n        if (!rewardsTotal[customerId]) {\n          rewardsTotal[customerId] = 0;\n        }\n        rewardsTotal[customerId] += currentMonth[customerId];\n      });\n    });\n    return {\n      rewardsPerMonth,\n      rewardsTotal\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Reward Calculator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rewards-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rewards-wrapper-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Rewards earned per month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), Object.entries(rewards.rewardsPerMonth).map(_ref => {\n          let [month, customers] = _ref;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: month\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table-rewards\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Customer Id\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 78,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Reward Points\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: Object.entries(customers).map(_ref2 => {\n                  let [customerId, rewards] = _ref2;\n                  return /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: customerId\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 89,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: rewards\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 92,\n                      columnNumber: 45\n                    }, this)]\n                  }, customerId, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 41\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this)]\n          }, month, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rewards-wrapper-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Rewards earned total\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table-rewards\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Customer Id\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Reward Points\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: Object.entries(rewards.rewardsTotal).map(_ref3 => {\n                let [customerId, rewards] = _ref3;\n                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: customerId\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: rewards\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 126,\n                    columnNumber: 41\n                  }, this)]\n                }, customerId, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 37\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n_s(RewardCalculator, \"HzgrGCc4CuFi3eAYhZ5imyCQ5JI=\");\n_c = RewardCalculator;\nexport default RewardCalculator;\nvar _c;\n$RefreshReg$(_c, \"RewardCalculator\");","map":{"version":3,"names":["React","useEffect","useState","RewardCalculator","props","customerId","amount","month","transactions","setTransactions","rewards","setRewards","rewardsPerMonth","rewardsTotal","fetch","then","res","json","data","calculateRewards","addTransaction","monthArr","forEach","transaction","date","Date","getMonth","Object","keys","currentMonth","entries","map","customers"],"sources":["/Users/snehapatil/Downloads/Reward-Program/src/components/RewardsCalculator.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst RewardCalculator = (props) => {\n    const { customerId, amount, month } = props\n    const [transactions, setTransactions] = useState([]);\n    const [rewards, setRewards] = useState({ rewardsPerMonth: {}, rewardsTotal: {} });\n\n    useEffect(() => {\n        fetch(\"http://localhost:3010/api/getTransactions\")\n            .then((res) => res.json())\n            .then((data) => {\n                setTransactions(data.transactions);\n            });\n    }, []);\n\n    useEffect(() => {\n        const rewards = calculateRewards();\n        setRewards(rewards)\n    }, [transactions])\n\n    const addTransaction = (customerId, amount, month) => {\n        setTransactions([...transactions, { customerId, amount, month }]);\n    };\n\n    const calculateRewards = () => {\n        const rewardsPerMonth = {};\n        const rewardsTotal = {};\n        const monthArr = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n        transactions.forEach(transaction => {\n            const { customerId, amount, date } = transaction;\n            const month = monthArr[new Date(date).getMonth()];\n            if (!rewardsPerMonth[month]) {\n                rewardsPerMonth[month] = {};\n            }\n            if (!rewardsPerMonth[month][customerId]) {\n                rewardsPerMonth[month][customerId] = 0;\n            }\n\n            if (amount > 100) {\n                rewardsPerMonth[month][customerId] += 2 * (amount - 100) + 50;\n            } else if (amount > 50) {\n                rewardsPerMonth[month][customerId] += amount - 50;\n            }\n        });\n\n        Object.keys(rewardsPerMonth).forEach(month => {\n            const currentMonth = rewardsPerMonth[month]\n            Object.keys(currentMonth).forEach(customerId => {\n                if (!rewardsTotal[customerId]) {\n                    rewardsTotal[customerId] = 0\n                }\n                rewardsTotal[customerId] += currentMonth[customerId];\n            });\n\n        })\n\n        return { rewardsPerMonth, rewardsTotal };\n    };\n\n\n\n    return (\n        <div>\n            <h1>Reward Calculator</h1>\n            <div className='rewards-wrapper'>\n\n                <div className='rewards-wrapper-box'>\n                    <h2>Rewards earned per month</h2>\n\n                    {Object.entries(rewards.rewardsPerMonth).map(([month, customers]) => (\n                        <div key={month}>\n                            <h3>\n                                {month}\n                            </h3>\n                            <table className=\"table-rewards\">\n                                <thead>\n                                    <tr>\n                                        <th>\n                                            Customer Id\n                                        </th>\n                                        <th>\n                                            Reward Points\n                                        </th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {Object.entries(customers).map(([customerId, rewards]) => (\n                                        <tr key={customerId}>\n                                            <td>\n                                                {customerId}\n                                            </td>\n                                            <td>\n                                                {rewards}\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </table>\n                        </div>\n                    ))}\n                </div>\n\n                <div className='rewards-wrapper-box'>\n                    <h2>Rewards earned total</h2>\n\n\n                    <div>\n\n                        <table className=\"table-rewards\">\n                            <thead>\n                                <tr>\n                                    <th>\n                                        Customer Id\n                                    </th>\n                                    <th>\n                                        Reward Points\n                                    </th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {Object.entries(rewards.rewardsTotal).map(([customerId, rewards]) => (\n                                    <tr key={customerId}>\n                                        <td>\n                                            {customerId}\n                                        </td>\n                                        <td>\n                                            {rewards}\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n\n            </div>\n\n        </div>\n    );\n};\n\nexport default RewardCalculator;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}